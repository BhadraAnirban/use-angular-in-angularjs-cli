{
  "version": 3,
  "file": "providers.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/angular/providers.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "/**\n * # UI-Router for Angular (v2+)\n *\n * - [@uirouter/angular home page](https://ui-router.github.io/ng2)\n * - [tutorials](https://ui-router.github.io/tutorial/ng2/helloworld)\n * - [quick start repository](http://github.com/ui-router/quickstart-ng2)\n *\n * Getting started:\n *\n * - Use npm. Add a dependency on latest `@uirouter/angular`\n * - Import UI-Router classes directly from `\"@uirouter/angular\"`\n *\n * ```js\n * import {StateRegistry} from \"@uirouter/angular\";\n * ```\n *\n * - Create application states (as defined by [[Ng2StateDeclaration]]).\n *\n * ```js\n * export let state1: Ng2StateDeclaration = {\n *   name: 'state1',\n *   component: State1Component,\n *   url: '/one'\n * }\n *\n * export let state2: Ng2StateDeclaration = {\n *   name: 'state2',\n *   component: State2Component,\n *   url: '/two'\n * }\n * ```\n *\n * - Import a [[UIRouterModule.forChild]] module into your feature `NgModule`s.\n *\n * ```js\n * @ NgModule({\n *   imports: [\n *     SharedModule,\n *     UIRouterModule.forChild({ states: [state1, state2 ] })\n *   ],\n *   declarations: [\n *     State1Component,\n *     State2Component,\n *   ]\n * })\n * export class MyFeatureModule {}\n * ```\n *\n * - Import a [[UIRouterModule.forRoot]] module into your application root `NgModule`\n * - Either bootstrap a [[UIView]] component, or add a `<ui-view></ui-view>` viewport to your root component.\n *\n * ```js\n * @ NgModule({\n *   imports: [\n *     BrowserModule,\n *     UIRouterModule.forRoot({ states: [ homeState ] }),\n *     MyFeatureModule,\n *   ],\n *   declarations: [\n *     HomeComponent\n *   ]\n *   bootstrap: [ UIView ]\n * })\n * class RootAppModule {}\n *\n * browserPlatformDynamic.bootstrapModule(RootAppModule);\n * ```\n *\n * - Optionally specify a configuration class [[ChildModule.configClass]] for any module\n * to perform any router configuration during bootstrap or lazyload.\n * Pass the class to [[UIRouterModule.forRoot]] or [[UIRouterModule.forChild]].\n *\n * ```js\n * import {UIRouter} from \"@uirouter/angular\";\n *\n * @ Injectable()\n * export class MyUIRouterConfig {\n *   // Constructor is injectable\n *   constructor(uiRouter: UIRouter) {\n *     uiRouter.urlMatcherFactory.type('datetime', myDateTimeParamType);\n *   }\n * }\n * ```\n *\n * @preferred @module ng2\n */\n/** */\nimport { Injector, Provider, PLATFORM_ID, APP_INITIALIZER } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  UIRouter,\n  PathNode,\n  StateRegistry,\n  StateService,\n  TransitionService,\n  UrlMatcherFactory,\n  UrlRouter,\n  ViewService,\n  UrlService,\n  UIRouterGlobals,\n  services,\n  Resolvable,\n  NATIVE_INJECTOR_TOKEN,\n} from '@uirouter/core';\nimport { UIView, ParentUIViewInject } from './directives/uiView';\nimport { ng2ViewsBuilder, Ng2ViewConfig } from './statebuilders/views';\nimport { Ng2ViewDeclaration } from './interface';\nimport { applyRootModuleConfig, applyModuleConfig } from './uiRouterConfig';\nimport { RootModule, StatesModule, UIROUTER_ROOT_MODULE, UIROUTER_MODULE_TOKEN } from './uiRouterNgModule';\nimport { servicesPlugin, ServicesPlugin } from '@uirouter/core';\nimport { ng2LazyLoadBuilder } from './statebuilders/lazyLoad';\nimport { UIRouterRx } from '@uirouter/rx';\nimport { LocationStrategy } from '@angular/common';\nimport { Ng2LocationServices } from './location/locationService';\nimport { Ng2LocationConfig } from './location/locationConfig';\n\n/**\n * This is a factory function for a UIRouter instance\n *\n * Creates a UIRouter instance and configures it for Angular, then invokes router bootstrap.\n * This function is used as an Angular `useFactory` Provider.\n */\nexport function uiRouterFactory(\n  locationStrategy: LocationStrategy,\n  rootModules: RootModule[],\n  modules: StatesModule[],\n  injector: Injector\n) {\n  if (rootModules.length !== 1) {\n    throw new Error(\"Exactly one UIRouterModule.forRoot() should be in the bootstrapped app module's imports: []\");\n  }\n\n  // ----------------- Create router -----------------\n  // Create a new ng2 UIRouter and configure it for ng2\n  const router = new UIRouter();\n\n  // Add RxJS plugin\n  router.plugin(UIRouterRx);\n\n  // Add $q-like and $injector-like service APIs\n  router.plugin<ServicesPlugin>(servicesPlugin);\n\n  // ----------------- Monkey Patches ----------------\n  // Monkey patch the services.$injector to use the root ng2 Injector\n  services.$injector.get = injector.get.bind(injector);\n\n  // ----------------- Configure for ng2 -------------\n  router.locationService = new Ng2LocationServices(\n    router,\n    locationStrategy,\n    isPlatformBrowser(injector.get(PLATFORM_ID))\n  );\n  router.locationConfig = new Ng2LocationConfig(router, locationStrategy);\n\n  // Apply ng2 ui-view handling code\n  const viewConfigFactory = (path: PathNode[], config: Ng2ViewDeclaration) => new Ng2ViewConfig(path, config);\n  router.viewService._pluginapi._viewConfigFactory('ng2', viewConfigFactory);\n\n  // Apply statebuilder decorator for ng2 NgModule registration\n  const registry = router.stateRegistry;\n  registry.decorator('views', ng2ViewsBuilder);\n  registry.decorator('lazyLoad', ng2LazyLoadBuilder);\n\n  // Prep the tree of NgModule by placing the root NgModule's Injector on the root state.\n  const ng2InjectorResolvable = Resolvable.fromData(NATIVE_INJECTOR_TOKEN, injector);\n  registry.root().resolvables.push(ng2InjectorResolvable);\n\n  // Auto-flush the parameter type queue\n  router.urlMatcherFactory.$get();\n\n  // ----------------- Initialize router -------------\n  rootModules.forEach(moduleConfig => applyRootModuleConfig(router, injector, moduleConfig));\n  modules.forEach(moduleConfig => applyModuleConfig(router, injector, moduleConfig));\n\n  return router;\n}\n\n// Start monitoring the URL when the app starts\nexport function appInitializer(router: UIRouter) {\n  return () => {\n    if (!router.urlRouter.interceptDeferred) {\n      router.urlService.listen();\n      router.urlService.sync();\n    }\n  };\n}\n\nexport function parentUIViewInjectFactory(r: StateRegistry) {\n  return { fqn: null, context: r.root() } as ParentUIViewInject;\n}\n\nexport const _UIROUTER_INSTANCE_PROVIDERS: Provider[] = [\n  {\n    provide: UIRouter,\n    useFactory: uiRouterFactory,\n    deps: [LocationStrategy, UIROUTER_ROOT_MODULE, UIROUTER_MODULE_TOKEN, Injector],\n  },\n  { provide: UIView.PARENT_INJECT, useFactory: parentUIViewInjectFactory, deps: [StateRegistry] },\n  { provide: APP_INITIALIZER, useFactory: appInitializer, deps: [UIRouter], multi: true },\n];\n\nexport function fnStateService(r: UIRouter) {\n  return r.stateService;\n}\nexport function fnTransitionService(r: UIRouter) {\n  return r.transitionService;\n}\nexport function fnUrlMatcherFactory(r: UIRouter) {\n  return r.urlMatcherFactory;\n}\nexport function fnUrlRouter(r: UIRouter) {\n  return r.urlRouter;\n}\nexport function fnUrlService(r: UIRouter) {\n  return r.urlService;\n}\nexport function fnViewService(r: UIRouter) {\n  return r.viewService;\n}\nexport function fnStateRegistry(r: UIRouter) {\n  return r.stateRegistry;\n}\nexport function fnGlobals(r: any) {\n  return r.globals;\n}\n\nexport const _UIROUTER_SERVICE_PROVIDERS: Provider[] = [\n  { provide: StateService, useFactory: fnStateService, deps: [UIRouter] },\n  { provide: TransitionService, useFactory: fnTransitionService, deps: [UIRouter] },\n  { provide: UrlMatcherFactory, useFactory: fnUrlMatcherFactory, deps: [UIRouter] },\n  { provide: UrlRouter, useFactory: fnUrlRouter, deps: [UIRouter] },\n  { provide: UrlService, useFactory: fnUrlService, deps: [UIRouter] },\n  { provide: ViewService, useFactory: fnViewService, deps: [UIRouter] },\n  { provide: StateRegistry, useFactory: fnStateRegistry, deps: [UIRouter] },\n  { provide: UIRouterGlobals, useFactory: fnGlobals, deps: [UIRouter] },\n];\n\n/**\n * The UI-Router providers, for use in your application bootstrap\n *\n * @deprecated use [[UIRouterModule.forRoot]]\n */\nexport const UIROUTER_PROVIDERS: Provider[] = _UIROUTER_INSTANCE_PROVIDERS.concat(_UIROUTER_SERVICE_PROVIDERS);\n"
  ]
}