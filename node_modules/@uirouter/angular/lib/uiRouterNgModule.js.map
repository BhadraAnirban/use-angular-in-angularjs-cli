{
  "version": 3,
  "file": "uiRouterNgModule.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/angular/uiRouterNgModule.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "/** @ng2api @module core */\n/** */\nimport { Ng2StateDeclaration } from './interface';\nimport {\n  NgModule,\n  ModuleWithProviders,\n  ANALYZE_FOR_ENTRY_COMPONENTS,\n  Provider,\n  Injector,\n  InjectionToken,\n  APP_INITIALIZER,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {\n  CommonModule,\n  LocationStrategy,\n  HashLocationStrategy,\n  PathLocationStrategy,\n  isPlatformServer,\n} from '@angular/common';\nimport { _UIROUTER_DIRECTIVES } from './directives/directives';\nimport { UIView } from './directives/uiView';\nimport { UrlRuleHandlerFn, TargetState, TargetStateDef, UIRouter, TransitionService } from '@uirouter/core';\nimport { _UIROUTER_INSTANCE_PROVIDERS, _UIROUTER_SERVICE_PROVIDERS } from './providers';\n\nimport { ROUTES } from '@angular/router';\n/** @hidden */ export const UIROUTER_ROOT_MODULE = new InjectionToken('UIRouter Root Module');\n/** @hidden */ export const UIROUTER_MODULE_TOKEN = new InjectionToken('UIRouter Module');\n/** @hidden */ export const UIROUTER_STATES = new InjectionToken('UIRouter States');\n// /** @hidden */ export const ROUTES = UIROUTER_STATES;\n\n// Delay angular bootstrap until first transition is successful, for SSR.\n// See https://github.com/ui-router/angular/pull/127\nexport function onTransitionReady(transitionService: TransitionService, root: RootModule[]) {\n  const mod = root[0];\n  if (!mod || !mod.deferInitialRender) {\n    return () => Promise.resolve();\n  }\n\n  return () =>\n    new Promise(resolve => {\n      const hook = trans => {\n        trans.promise.then(resolve, resolve);\n      };\n      transitionService.onStart({}, hook, { invokeLimit: 1 });\n    });\n}\n\nexport function makeRootProviders(module: RootModule): Provider[] {\n  return [\n    { provide: UIROUTER_ROOT_MODULE, useValue: module, multi: true },\n    { provide: UIROUTER_MODULE_TOKEN, useValue: module, multi: true },\n    { provide: ROUTES, useValue: module.states || [], multi: true },\n    { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: module.states || [], multi: true },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: onTransitionReady,\n      deps: [TransitionService, UIROUTER_ROOT_MODULE],\n      multi: true,\n    },\n  ];\n}\n\nexport function makeChildProviders(module: StatesModule): Provider[] {\n  return [\n    { provide: UIROUTER_MODULE_TOKEN, useValue: module, multi: true },\n    { provide: ROUTES, useValue: module.states || [], multi: true },\n    { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: module.states || [], multi: true },\n  ];\n}\n\nexport function locationStrategy(useHash) {\n  return { provide: LocationStrategy, useClass: useHash ? HashLocationStrategy : PathLocationStrategy };\n}\n\n/**\n * Creates UI-Router Modules\n *\n * This class has two static factory methods which create UIRouter Modules.\n * A UI-Router Module is an [Angular NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html)\n * with support for UI-Router.\n *\n * ### UIRouter Directives\n *\n * When a UI-Router Module is imported into a `NgModule`, that module's components\n * can use the UIRouter Directives such as [[UIView]], [[UISref]], [[UISrefActive]].\n *\n * ### State Definitions\n *\n * State definitions found in the `states:` property are provided to the Dependency Injector.\n * This enables UI-Router to automatically register the states with the [[StateRegistry]] at bootstrap (and during lazy load).\n *\n * ### Entry Components\n *\n * Any routed components are added as `entryComponents:` so they will get compiled.\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [_UIROUTER_DIRECTIVES],\n  exports: [_UIROUTER_DIRECTIVES],\n  entryComponents: [UIView],\n})\nexport class UIRouterModule {\n  /**\n   * Creates a UI-Router Module for the root (bootstrapped) application module to import\n   *\n   * This factory function creates an [Angular NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html)\n   * with UI-Router support.\n   *\n   * The `forRoot` module should be added to the `imports:` of the `NgModule` being bootstrapped.\n   * An application should only create and import a single `NgModule` using `forRoot()`.\n   * All other modules should be created using [[UIRouterModule.forChild]].\n   *\n   * Unlike `forChild`, an `NgModule` returned by this factory provides the [[UIRouter]] singleton object.\n   * This factory also accepts root-level router configuration.\n   * These are the only differences between `forRoot` and `forChild`.\n   *\n   * Example:\n   * ```js\n   * let routerConfig = {\n   *   otherwise: '/home',\n   *   states: [homeState, aboutState]\n   * };\n   *\n   * @ NgModule({\n   *   imports: [\n   *     BrowserModule,\n   *     UIRouterModule.forRoot(routerConfig),\n   *     FeatureModule1\n   *   ]\n   * })\n   * class MyRootAppModule {}\n   *\n   * browserPlatformDynamic.bootstrapModule(MyRootAppModule);\n   * ```\n   *\n   * @param config declarative UI-Router configuration\n   * @returns an `NgModule` which provides the [[UIRouter]] singleton instance\n   */\n  static forRoot(config: RootModule = {}): ModuleWithProviders {\n    return {\n      ngModule: UIRouterModule,\n      providers: [\n        _UIROUTER_INSTANCE_PROVIDERS,\n        _UIROUTER_SERVICE_PROVIDERS,\n        locationStrategy(config.useHash),\n        ...makeRootProviders(config),\n      ],\n    };\n  }\n\n  /**\n   * Creates an `NgModule` for a UIRouter module\n   *\n   * This function creates an [Angular NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html)\n   * with UI-Router support.\n   *\n   * #### Example:\n   * ```js\n   * var homeState = { name: 'home', url: '/home', component: Home };\n   * var aboutState = { name: 'about', url: '/about', component: About };\n   *\n   * @ NgModule({\n   *   imports: [\n   *     UIRouterModule.forChild({ states: [ homeState, aboutState ] }),\n   *     SharedModule,\n   *   ],\n   *   declarations: [ Home, About ],\n   * })\n   * export class AppModule {};\n   * ```\n   *\n   * @param module UI-Router module options\n   * @returns an `NgModule`\n   */\n  static forChild(module: StatesModule = {}): ModuleWithProviders {\n    return {\n      ngModule: UIRouterModule,\n      providers: makeChildProviders(module),\n    };\n  }\n}\n\n/**\n * UI-Router declarative configuration which can be provided to [[UIRouterModule.forRoot]]\n */\nexport interface RootModule extends StatesModule {\n  /**\n   * Chooses a `LocationStrategy`.\n   *\n   * The location strategy enables either HTML5 Push State\n   * (Requires server-side support) or \"HashBang\" URLs.\n   *\n   * When `false`, uses [`PathLocationStrategy`](https://angular.io/docs/ts/latest/api/common/index/PathLocationStrategy-class.html)\n   * When `true`, uses [`HashLocationStrategy`](https://angular.io/docs/ts/latest/api/common/index/HashLocationStrategy-class.html)\n   *\n   * Defaults to `false`\n   */\n  useHash?: boolean;\n\n  /**\n   * Configures the `otherwise` rule, which chooses the state or URL to activate when no other routes matched.\n   *\n   * See: [[UrlRulesApi.otherwise]].\n   */\n  otherwise?: string | UrlRuleHandlerFn | TargetState | TargetStateDef;\n\n  /**\n   * Configures the `initial` rule, which chooses the state or URL to activate when the\n   * application initially starts, and no other routes matched.\n   *\n   * See: [[UrlRulesApi.initial]].\n   */\n  initial?: string | UrlRuleHandlerFn | TargetState | TargetStateDef;\n\n  /**\n   * Sets [[UrlRouterProvider.deferIntercept]]\n   */\n  deferIntercept?: boolean;\n\n  /**\n   * Tells Angular to defer the first render until after the initial transition is complete.\n   *\n   * When `true`, adds an async `APP_INITIALIZER` which is resolved after any `onSuccess` or `onError`.\n   * The initializer stops angular from rendering the root component until after the first transition completes.\n   * This may prevent initial page flicker while the state is being loaded.\n   *\n   * Defaults to `false`\n   */\n  deferInitialRender?: boolean;\n}\n\n/**\n * UI-Router Module declarative configuration which can be passed to [[UIRouterModule.forChild]]\n */\nexport interface StatesModule {\n  /**\n   * The module's UI-Router states\n   *\n   * This list of [[Ng2StateDeclaration]] objects will be registered with the [[StateRegistry]].\n   * Also, the components that the states route to will be added to `entryComponents` so they will be compiled.\n   */\n  states?: Ng2StateDeclaration[];\n\n  /**\n   * A UI-Router Module's imperative configuration\n   *\n   * If a UI-Router Module needs to perform some configuration (such as registering\n   * parameter types or Transition Hooks) a `configFn` should be supplied.\n   * The function will be passed the `UIRouter` instance, the module's `Injector`,\n   * and the module object.\n   *\n   * #### Example:\n   * ```js\n   * import { Injector } from \"@angular/core\";\n   * import { UIRouter } from \"@uirouter/angular\";\n   * import { requireAuthHook } from \"./requireAuthHook\";\n   * import { MyService } from \"./myService\";\n   *\n   * export function configureMyModule(uiRouter: UIRouter, injector: Injector, module: StatesModule) {\n   *   // Get UIRouter services off the UIRouter object\n   *   let urlConfig = uiRouter.urlService.config;\n   *   let transitionService = uiRouter.transitionService;\n   *   uiRouter.trace.enable(\"TRANSITION\");\n   *\n   *   transitionService.onBefore({ to: (state) => state.requiresAuth }, requireAuthHook);\n   *\n   *   // Create a slug type based on the string type\n   *   let builtInStringType = urlConfig.type('string');\n   *   let slugType = Object.assign({}, builtInStringType, { encode: (str) => str, decode: (str) => str });\n   *   urlConfig.type('slug', slugType);\n   *\n   *   // Inject arbitrary services from DI using the Injector argument\n   *   let myService: MyService = injector.get(MyService)\n   *   myService.useFastMode();\n   * }\n   * ```\n   *\n   * ```js\n   * @NgModule({\n   *   imports: [\n   *     UIRouterModule.forChild({ states: STATES, config: configureMyModule });\n   *   ]\n   * })\n   * class MyModule {}\n   * ```\n   */\n  config?: (uiRouterInstance: UIRouter, injector: Injector, module: StatesModule) => any;\n}\n"
  ]
}